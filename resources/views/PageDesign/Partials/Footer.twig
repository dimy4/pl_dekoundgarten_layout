{% import "Ceres::PageDesign.Macros.LayoutContainer" as LayoutContainer %}

{% set numberOfCols = config('Ceres.footer.number_of_cols') %}
{% set colSize = (12 / (numberOfCols + 1)) %}
{% set displayedCategories = [] %}
{% set numberOfFeatures = config('Ceres.footer.number_of_features') %}
{% set topButtonPosition = config('Ceres.footer.to_top_button') %}

<div class="footer">

    <div class="{% if topButtonPosition == "right" %}back-to-top{% else %}back-to-top-center{% endif %} hidden-sm-down">
        <i class="fa fa-chevron-up"></i>
    </div>

    <div class="to-top hidden-md-up" v-scroll-to-top>
        <i class="fa fa-arrow-up" aria-hidden="true"></i>
    </div>

    <div class="container-max footer-content ewrtfdsgfdg">
        <div class="row">
            {% for i in 1..numberOfCols %}
                <div class="col-xs-6 col-sm-3">
                    <nav class="footer-column m-b-2">
                        <h2 class="h5">{{ trans('Ceres::Template.footerColumnTitle' ~ i) }}</h2>
                        <ul class="list-unstyled">

                            {% set footerCategories = config('Ceres.footer.col_' ~ i ~ '_categories') | find("[0-9]+") %}
                            {% for catID in footerCategories %}

                                {% set cat = services.category.get(catID, lang) %}

                                {% if cat is not null %}
                                    {% set displayedCategories = displayedCategories | merge([catID]) %}
                                    <li>
                                        <a href="{{ services.category.getURL( cat ) }}">
                                            {{ cat.details.first.name }}</a>
                                    </li>
                                {% endif %}

                            {% endfor %}

                        </ul>
                    </nav>
                </div>
            {% endfor %}
            <div class="col-xs-6 col-sm-3">
                <div class="footer-column">
                    {{ LayoutContainer.show("Ceres::Footer.RowOne") }}
                </div>
            </div>
            <div class="col-xs-12 col-sm-3">
                <div class="footer-column row">
                    {% set rowTwo = LayoutContainer.show("Ceres::Footer.RowTwo") %}
                    
                    {{ rowTwo }}

                    <div class="col-xs-12{% if rowTwo|trim is not empty %} col-sm-6 col-lg-12{% endif %}">
                        {{ LayoutContainer.show("Ceres::Footer.RowThree") }}
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>