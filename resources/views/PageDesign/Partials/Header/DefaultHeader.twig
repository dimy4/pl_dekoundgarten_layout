{% import "Ceres::PageDesign.Macros.LayoutContainer" as LayoutContainer %}

<header id="page-header" class="top-bar header-fw">
        <div>
            <div class="two-headers">
                <div class="container-max">
                    <div class="row mx-0 flex-row align-items-center preheader d-none d-lg-flex">
                        <div class="col-6 col-lg-4 text-left head-slogan">{{ config("Dekoundgarten.header.slogan") }}</div>
                        <div class="col-6 col-lg-8 text-right">
                            <ul class="premenu">
                                <li><client-only><user-login-handler template-override="#user-login-handlerDG"></user-login-handler></client-only></li>
                                <li><a href="/contact">Kontakt</a></li>
                            </ul>
                        </div>
                    </div>
                    <div class="row mx-0 d-lg-none">
                        {{ LayoutContainer.show("Ceres::Header.LeftSide") }}

                        <ul id="controlsList" class="controls-list list-inline ml-auto mb-0">

                            <li class="list-inline-item control-user">
                                <lazy-hydrate when-idle>
                                    <user-login-handler>
                                        <a data-toggle="modal" aria-label="{{ trans('Ceres::Template.login') }}">
                                            <i class="fa fa-user" aria-hidden="true"></i>
                                            <span class="hidden-xs-down">{{ trans("Ceres::Template.login") }}</span>
                                        </a>
                                        <span class="pipe"></span>
                                        <a data-toggle="modal" aria-label="{{ trans('Ceres::Template.loginRegister') }}">
                                            <i class="fa fa-user-plus" aria-hidden="true"></i>
                                            <span class="hidden-xs-down">{{ trans("Ceres::Template.loginRegister") }}</span>
                                        </a>
                                    </user-login-handler>
                                </lazy-hydrate>
                            </li>
                            <li class="list-inline-item dropdown control-languages">
                               <a data-toggle="collapse" href="#countrySettings" aria-expanded="false"
                                    aria-controls="countrySettings"
                                    data-parent="#controlsList"
                                    aria-label="{{ trans('Ceres::Template.headerCountry') }}">
                                        <i class="flag-icon flag-icon-{{ lang }}"></i>
                                </a>
                            </li>

                            {% if enableCurrencySelect == "true" %}
                                <li class="list-inline-item dropdown control-languages">
                                    <a class=""
                                        data-toggle="collapse"
                                        href="#currencySelect"
                                        aria-expanded="false"
                                        aria-controls="currencySelect"
                                        data-parent="#controlsList"
                                        aria-label="{{ trans('Ceres::Template.headerCurrency') }}"
                                        @mouseover.once="$store.dispatch('loadComponent', 'item-search')">
                                            <span>{{ services.checkout.getCurrencyData()[currencyFormat] }}</span>
                                    </a>
                                </li>
                            {% endif %}
                            <li class="list-inline-item control-search">
                                <a class="anicon anicon-search-xcross nav-link"
                                    aria-label="toggle search"
                                    data-toggle="collapse"
                                    href="#searchBox"
                                    aria-expanded="false"
                                    aria-controls="searchBox"
                                    data-parent="#controlsList">
                                    <span class="anicon-search-item" aria-hidden="true"></span>
                                </a>
                            </li>
                            {% if services.url.isRouteEnabled("wish-list") %}
                                <li class="list-inline-item control-wish-list">
                                    <lazy-hydrate when-idle>
                                        <wish-list-count>
                                            <a class="nav-link" aria-label="{{ trans('Ceres::Template.wishList') }}">
                                                <span class="badge-right mr-1 d-none d-sm-inline">0</span>
                                                <i class="fa fa-heart-o" aria-hidden="true"></i>
                                            </a>
                                        </wish-list-count>
                                    </lazy-hydrate>
                                </li>
                            {% endif %}
                            <li class="list-inline-item control-basket" @mouseover.once="$store.dispatch('loadComponent', 'basket-preview')">
                                <a v-toggle-basket-preview href="#" class="toggle-basket-preview nav-link">
                                    <i v-waiting-animation="$store.state.basket.isBasketLoading" waiting-class="fa fa-refresh fa-spin" class="fa fa-shopping-cart" aria-hidden="true"></i>
                                    <span class="badge" v-if="!$store.state.basket.showNetPrices" v-basket-item-sum="$store.state.basket.data.itemSum">0,00 {{ services.checkout.getCurrencyData()[currencyFormat] }}</span>
                                    <span class="badge" v-else v-cloak v-basket-item-sum="$store.state.basket.data.itemSumNet">0,00 {{ services.checkout.getCurrencyData()[currencyFormat] }}</span>
                                </a>
                            </li>
                        </ul>
                    </div>
                    <basket-preview v-if="$store.state.lazyComponent.components['basket-preview']" :show-net-prices="{{ showNetPrices | json_encode }}">
                        <template #before-basket-item>
                            {{ LayoutContainer.show("Ceres::BasketList.BeforeItem") }}
                        </template>
                        <template #after-basket-item>
                            {{ LayoutContainer.show("Ceres::BasketList.AfterItem") }}
                        </template>
                        <template #before-basket-totals>
                            {{ LayoutContainer.show("Ceres::BasketPreview.BeforeBasketTotals") }}
                        </template>
                        <template #before-item-sum>
                            {{ LayoutContainer.show("Ceres::BasketTotals.BeforeItemSum") }}
                        </template>
                        <template #after-item-sum>
                            {{ LayoutContainer.show("Ceres::BasketTotals.AfterItemSum") }}
                        </template>
                        <template #before-shipping-costs>
                            {{ LayoutContainer.show("Ceres::BasketTotals.BeforeShippingCosts") }}
                        </template>
                        <template #after-shipping-costs>
                            {{ LayoutContainer.show("Ceres::BasketTotals.AfterShippingCosts") }}
                        </template>
                        <template #before-total-sum>
                            {{ LayoutContainer.show("Ceres::BasketTotals.BeforeTotalSum") }}
                        </template>
                        <template #before-vat>
                            {{ LayoutContainer.show("Ceres::BasketTotals.BeforeVat") }}
                        </template>
                        <template #after-vat>
                            {{ LayoutContainer.show("Ceres::BasketTotals.AfterVat") }}
                        </template>
                        <template #after-total-sum>
                            {{ LayoutContainer.show("Ceres::BasketTotals.AfterTotalSum") }}
                        </template>
                        <template #after-basket-totals>
                            {{ LayoutContainer.show("Ceres::BasketPreview.AfterBasketTotals") }}
                        </template>
                        <template #before-checkout-button>
                            {{ LayoutContainer.show("Ceres::BasketPreview.BeforeCheckoutButton") }}
                        </template>
                        <template #after-checkout-button>
                            {{ LayoutContainer.show("Ceres::BasketPreview.AfterCheckoutButton") }}
                        </template>
                    </basket-preview>
                </div>
            </div>
            {% include "Dekoundgarten::PageDesign.Partials.Header.Navigation" %}
        </div>
</header>

<!-- breadcrumb -->
{% if not services.template.isHome() and not services.template.isMyAccount() and not services.template.isCheckout() %}
    {% include "Dekoundgarten::PageDesign.Partials.Header.Breadcrumb" %}
{% endif %}

<div class="container-max px-0 px-lg-3 page-header">
    <div class="row mx-0 flex-row-reverse position-relative">
        <div id="searchBox" class="cmp cmp-search-box collapse">
            {% set overrideSearchBar = LayoutContainer.show("Ceres::Search.SearchBar") %}
            {% if overrideSearchBar | trim is empty %}
                <lazy-load component="item-search">
                    <item-search></item-search>
                </lazy-load>
            {% else %}
                {{ overrideSearchBar | raw }}
            {% endif %}
        </div>

        {% if enableCurrencySelect == "true" %}
            <div id="currencySelect" class="cmp cmp-currency-select collapse">
                <div class="container-max">
                    <div class="row py-3">
                        <div class="currency-list col-12">
                            <div class="list-title">
                                <strong>{{ trans("Ceres::Template.headerCurrency") }}</strong>
                                <hr>
                            </div>
                            <ul class="row text-center text-sm-left">
                                {% for currency in services.checkout.getCurrencyList() if currency.name in activeCurrencies or activeCurrencies[0] == 'all' or currency.name == services.checkout.getCurrencyData().name %}
                                    <li class="col-2 px-0{% if currency.name == services.checkout.getCurrencyData().name %} active{% endif %}">
                                        <a class="nav-link" href="{{ queryString({"currency": currency.name}) }}" rel="nofollow">
                                            {% if currencyFormatSelect == 'all' %}
                                                {{ currency.name }} <br class="d-block d-sm-none" />({{ currency.symbol }})
                                            {% else %}
                                                {{ currency[currencyFormatSelect] }}
                                            {% endif %}
                                        </a>
                                    </li>
                                {% endfor %}
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        {% endif %}

        <div id="countrySettings" class="cmp cmp-country-settings collapse">
            <div class="container-max">
                <div class="row py-3">
                    <div class="col-12 col-lg-6">
                        <div class="language-settings">
                            <div class="list-title">
                                <strong>{{ trans("Ceres::Template.headerSelectLanguage") }}</strong>
                                <hr>
                            </div>

                            {% set languageList = services.webstoreConfigurationRepository.getActiveLanguageList() %}
                            {% set languageUrls = services.url.getLanguageURLs() %}
                            <ul class="row">
                                {% for language in languageList %}
                                    {% set languageISO = services.localizationRepository.getLanguageCode(language) %}
                                    <li class="col-6 col-sm-4 px-0{% if lang == language %} active{% endif %}">
                                        <a class="nav-link" href="{% if languageUrls[languageISO] is defined %}{{ languageUrls[languageISO] ~ queryString() }}{% elseif language != defaultLanguage %}/{{ language }}{{ urls.trailingSlashSuffix }}{% else %}/{% endif %}" data-update-url>
                                            <i class="flag-icon flag-icon-{{ language }}"></i>
                                            {{ trans("Ceres::Template.header" ~ language | capitalize) }}
                                        </a>
                                    </li>
                                {% endfor %}
                            </ul>
                        </div>
                        <div class="col-12 col-lg-6">
                            <div class="shipping-settings">
                                <div class="list-title">
                                    <strong>{{ trans("Ceres::Template.headerSelectShippingCountry") }}</strong>
                                    <hr>
                                </div>
                                <intersect>
                                    <shipping-country-select :disable-input="{{ services.template.isCheckout() | json_encode() }}"></shipping-country-select>
                                    <template #loading>
                                        <div class="row" style="height:1px;"></div>
                                    </template>
                                </intersect>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>